;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 1/28/2021 9:27:15 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF002EFE1  	GOTO        1474
0x0004	0x0000      	NOP
0x0006	0x0000      	NOP
0x0008	0xF000EF00  	GOTO        0
0x000C	0x0000      	NOP
0x000E	0x0000      	NOP
0x0010	0x0000      	NOP
0x0012	0x0000      	NOP
0x0014	0x0000      	NOP
0x0016	0x0000      	NOP
0x0018	0xD7F3      	BRA         0
_step_foward:
;MyProject.c,172 :: 		void step_foward(){
;MyProject.c,173 :: 		IN1=1;
0x001C	0x8283      	BSF         PORTD, 1 
;MyProject.c,174 :: 		IN2=0;        //REVERS LOGIC TO BE FORWAED
0x001E	0x9483      	BCF         PORTD, 2 
;MyProject.c,175 :: 		IN3=0;
0x0020	0x9683      	BCF         PORTD, 3 
;MyProject.c,176 :: 		IN4=1;
0x0022	0x8883      	BSF         PORTD, 4 
;MyProject.c,177 :: 		IN5=1;
0x0024	0x8A83      	BSF         PORTD, 5 
;MyProject.c,178 :: 		IN6=0;       /// REVERS LOGIC TO BE FOWARD
0x0026	0x9C83      	BCF         PORTD, 6 
;MyProject.c,179 :: 		IN7=0;
0x0028	0x9E83      	BCF         PORTD, 7 
;MyProject.c,180 :: 		IN8=1;
0x002A	0x8083      	BSF         PORTD, 0 
;MyProject.c,182 :: 		}
L_end_step_foward:
0x002C	0x0012      	RETURN      0
; end of _step_foward
_roboot_left_90:
;MyProject.c,219 :: 		void roboot_left_90(){
;MyProject.c,220 :: 		IN1=0;
0x002E	0x9283      	BCF         PORTD, 1 
;MyProject.c,221 :: 		IN2=1;        //REVERS LOGIC TO BE FORWAED
0x0030	0x8483      	BSF         PORTD, 2 
;MyProject.c,222 :: 		IN3=0;
0x0032	0x9683      	BCF         PORTD, 3 
;MyProject.c,223 :: 		IN4=1;
0x0034	0x8883      	BSF         PORTD, 4 
;MyProject.c,224 :: 		IN5=0;
0x0036	0x9A83      	BCF         PORTD, 5 
;MyProject.c,225 :: 		IN6=1;       /// REVERS LOGIC TO BE FOWARD
0x0038	0x8C83      	BSF         PORTD, 6 
;MyProject.c,226 :: 		IN7=0;
0x003A	0x9E83      	BCF         PORTD, 7 
;MyProject.c,227 :: 		IN8=1;
0x003C	0x8083      	BSF         PORTD, 0 
;MyProject.c,228 :: 		delay_ms(600);
0x003E	0x0E07      	MOVLW       7
0x0040	0x6E0B      	MOVWF       R11, 0
0x0042	0x0E17      	MOVLW       23
0x0044	0x6E0C      	MOVWF       R12, 0
0x0046	0x0E6A      	MOVLW       106
0x0048	0x6E0D      	MOVWF       R13, 0
L_roboot_left_9076:
0x004A	0x2E0D      	DECFSZ      R13, 1, 0
0x004C	0xD7FE      	BRA         L_roboot_left_9076
0x004E	0x2E0C      	DECFSZ      R12, 1, 0
0x0050	0xD7FC      	BRA         L_roboot_left_9076
0x0052	0x2E0B      	DECFSZ      R11, 1, 0
0x0054	0xD7FA      	BRA         L_roboot_left_9076
0x0056	0x0000      	NOP
;MyProject.c,230 :: 		}
L_end_roboot_left_90:
0x0058	0x0012      	RETURN      0
; end of _roboot_left_90
_roboot_left_180:
;MyProject.c,231 :: 		void roboot_left_180(){
;MyProject.c,232 :: 		IN1=0;
0x005A	0x9283      	BCF         PORTD, 1 
;MyProject.c,233 :: 		IN2=1;        //REVERS LOGIC TO BE FORWAED
0x005C	0x8483      	BSF         PORTD, 2 
;MyProject.c,234 :: 		IN3=0;
0x005E	0x9683      	BCF         PORTD, 3 
;MyProject.c,235 :: 		IN4=1;
0x0060	0x8883      	BSF         PORTD, 4 
;MyProject.c,236 :: 		IN5=0;
0x0062	0x9A83      	BCF         PORTD, 5 
;MyProject.c,237 :: 		IN6=1;       /// REVERS LOGIC TO BE FOWARD
0x0064	0x8C83      	BSF         PORTD, 6 
;MyProject.c,238 :: 		IN7=0;
0x0066	0x9E83      	BCF         PORTD, 7 
;MyProject.c,239 :: 		IN8=1;
0x0068	0x8083      	BSF         PORTD, 0 
;MyProject.c,240 :: 		delay_ms(1200);
0x006A	0x0E0D      	MOVLW       13
0x006C	0x6E0B      	MOVWF       R11, 0
0x006E	0x0E2D      	MOVLW       45
0x0070	0x6E0C      	MOVWF       R12, 0
0x0072	0x0ED7      	MOVLW       215
0x0074	0x6E0D      	MOVWF       R13, 0
L_roboot_left_18077:
0x0076	0x2E0D      	DECFSZ      R13, 1, 0
0x0078	0xD7FE      	BRA         L_roboot_left_18077
0x007A	0x2E0C      	DECFSZ      R12, 1, 0
0x007C	0xD7FC      	BRA         L_roboot_left_18077
0x007E	0x2E0B      	DECFSZ      R11, 1, 0
0x0080	0xD7FA      	BRA         L_roboot_left_18077
0x0082	0x0000      	NOP
0x0084	0x0000      	NOP
;MyProject.c,242 :: 		}
L_end_roboot_left_180:
0x0086	0x0012      	RETURN      0
; end of _roboot_left_180
_moving_exactly_on_track:
;MyProject.c,68 :: 		void moving_exactly_on_track (){
;MyProject.c,69 :: 		if ( left==1 && right==1 && ex_left==1 && ex_right ==1){
0x0088	0x0E00      	MOVLW       0
0x008A	0x182C      	XORWF       _left+1, 0 
0x008C	0xE102      	BNZ         L__moving_exactly_on_track132
0x008E	0x0E01      	MOVLW       1
0x0090	0x182B      	XORWF       _left, 0 
L__moving_exactly_on_track132:
0x0092	0xE11C      	BNZ         L_moving_exactly_on_track4
0x0094	0x0E00      	MOVLW       0
0x0096	0x1828      	XORWF       _right+1, 0 
0x0098	0xE102      	BNZ         L__moving_exactly_on_track133
0x009A	0x0E01      	MOVLW       1
0x009C	0x1827      	XORWF       _right, 0 
L__moving_exactly_on_track133:
0x009E	0xE116      	BNZ         L_moving_exactly_on_track4
0x00A0	0x0E00      	MOVLW       0
0x00A2	0x182E      	XORWF       _ex_left+1, 0 
0x00A4	0xE102      	BNZ         L__moving_exactly_on_track134
0x00A6	0x0E01      	MOVLW       1
0x00A8	0x182D      	XORWF       _ex_left, 0 
L__moving_exactly_on_track134:
0x00AA	0xE110      	BNZ         L_moving_exactly_on_track4
0x00AC	0x0E00      	MOVLW       0
0x00AE	0x1826      	XORWF       _ex_right+1, 0 
0x00B0	0xE102      	BNZ         L__moving_exactly_on_track135
0x00B2	0x0E01      	MOVLW       1
0x00B4	0x1825      	XORWF       _ex_right, 0 
L__moving_exactly_on_track135:
0x00B6	0xE10A      	BNZ         L_moving_exactly_on_track4
L__moving_exactly_on_track112:
;MyProject.c,70 :: 		if(start_flage==0){
0x00B8	0x0E00      	MOVLW       0
0x00BA	0x1832      	XORWF       _start_flage+1, 0 
0x00BC	0xE102      	BNZ         L__moving_exactly_on_track136
0x00BE	0x0E00      	MOVLW       0
0x00C0	0x1831      	XORWF       _start_flage, 0 
L__moving_exactly_on_track136:
0x00C2	0xE104      	BNZ         L_moving_exactly_on_track5
;MyProject.c,72 :: 		start_flage=1;
0x00C4	0x0E01      	MOVLW       1
0x00C6	0x6E31      	MOVWF       _start_flage 
0x00C8	0x0E00      	MOVLW       0
0x00CA	0x6E32      	MOVWF       _start_flage+1 
;MyProject.c,73 :: 		}
L_moving_exactly_on_track5:
;MyProject.c,75 :: 		}
L_moving_exactly_on_track4:
;MyProject.c,76 :: 		if(left==0  && right==1  && ex_left== 1  && ex_right== 1|| left== 1 && right== 1 && left==0&& ex_right==1  ){
0x00CC	0x0E00      	MOVLW       0
0x00CE	0x182C      	XORWF       _left+1, 0 
0x00D0	0xE102      	BNZ         L__moving_exactly_on_track137
0x00D2	0x0E00      	MOVLW       0
0x00D4	0x182B      	XORWF       _left, 0 
L__moving_exactly_on_track137:
0x00D6	0xE113      	BNZ         L__moving_exactly_on_track111
0x00D8	0x0E00      	MOVLW       0
0x00DA	0x1828      	XORWF       _right+1, 0 
0x00DC	0xE102      	BNZ         L__moving_exactly_on_track138
0x00DE	0x0E01      	MOVLW       1
0x00E0	0x1827      	XORWF       _right, 0 
L__moving_exactly_on_track138:
0x00E2	0xE10D      	BNZ         L__moving_exactly_on_track111
0x00E4	0x0E00      	MOVLW       0
0x00E6	0x182E      	XORWF       _ex_left+1, 0 
0x00E8	0xE102      	BNZ         L__moving_exactly_on_track139
0x00EA	0x0E01      	MOVLW       1
0x00EC	0x182D      	XORWF       _ex_left, 0 
L__moving_exactly_on_track139:
0x00EE	0xE107      	BNZ         L__moving_exactly_on_track111
0x00F0	0x0E00      	MOVLW       0
0x00F2	0x1826      	XORWF       _ex_right+1, 0 
0x00F4	0xE102      	BNZ         L__moving_exactly_on_track140
0x00F6	0x0E01      	MOVLW       1
0x00F8	0x1825      	XORWF       _ex_right, 0 
L__moving_exactly_on_track140:
0x00FA	0xE101      	BNZ         L__moving_exactly_on_track111
0x00FC	0xD01A      	BRA         L__moving_exactly_on_track109
L__moving_exactly_on_track111:
0x00FE	0x0E00      	MOVLW       0
0x0100	0x182C      	XORWF       _left+1, 0 
0x0102	0xE102      	BNZ         L__moving_exactly_on_track141
0x0104	0x0E01      	MOVLW       1
0x0106	0x182B      	XORWF       _left, 0 
L__moving_exactly_on_track141:
0x0108	0xE113      	BNZ         L__moving_exactly_on_track110
0x010A	0x0E00      	MOVLW       0
0x010C	0x1828      	XORWF       _right+1, 0 
0x010E	0xE102      	BNZ         L__moving_exactly_on_track142
0x0110	0x0E01      	MOVLW       1
0x0112	0x1827      	XORWF       _right, 0 
L__moving_exactly_on_track142:
0x0114	0xE10D      	BNZ         L__moving_exactly_on_track110
0x0116	0x0E00      	MOVLW       0
0x0118	0x182C      	XORWF       _left+1, 0 
0x011A	0xE102      	BNZ         L__moving_exactly_on_track143
0x011C	0x0E00      	MOVLW       0
0x011E	0x182B      	XORWF       _left, 0 
L__moving_exactly_on_track143:
0x0120	0xE107      	BNZ         L__moving_exactly_on_track110
0x0122	0x0E00      	MOVLW       0
0x0124	0x1826      	XORWF       _ex_right+1, 0 
0x0126	0xE102      	BNZ         L__moving_exactly_on_track144
0x0128	0x0E01      	MOVLW       1
0x012A	0x1825      	XORWF       _ex_right, 0 
L__moving_exactly_on_track144:
0x012C	0xE101      	BNZ         L__moving_exactly_on_track110
0x012E	0xD001      	BRA         L__moving_exactly_on_track109
L__moving_exactly_on_track110:
0x0130	0xD000      	BRA         L_moving_exactly_on_track12
L__moving_exactly_on_track109:
;MyProject.c,79 :: 		}
L_moving_exactly_on_track12:
;MyProject.c,80 :: 		if(l==1  && r==0  && el== 1  && er==1 || l== 1 && r==1  && el== 1  && er==0  ){
0x0132	0xA282      	BTFSS       PORTC, 1 
0x0134	0xD007      	BRA         L__moving_exactly_on_track108
0x0136	0xB482      	BTFSC       PORTC, 2 
0x0138	0xD005      	BRA         L__moving_exactly_on_track108
0x013A	0xA082      	BTFSS       PORTC, 0 
0x013C	0xD003      	BRA         L__moving_exactly_on_track108
0x013E	0xA682      	BTFSS       PORTC, 3 
0x0140	0xD001      	BRA         L__moving_exactly_on_track108
0x0142	0xD00A      	BRA         L__moving_exactly_on_track106
L__moving_exactly_on_track108:
0x0144	0xA282      	BTFSS       PORTC, 1 
0x0146	0xD007      	BRA         L__moving_exactly_on_track107
0x0148	0xA482      	BTFSS       PORTC, 2 
0x014A	0xD005      	BRA         L__moving_exactly_on_track107
0x014C	0xA082      	BTFSS       PORTC, 0 
0x014E	0xD003      	BRA         L__moving_exactly_on_track107
0x0150	0xB682      	BTFSC       PORTC, 3 
0x0152	0xD001      	BRA         L__moving_exactly_on_track107
0x0154	0xD001      	BRA         L__moving_exactly_on_track106
L__moving_exactly_on_track107:
0x0156	0xD000      	BRA         L_moving_exactly_on_track19
L__moving_exactly_on_track106:
;MyProject.c,83 :: 		}
L_moving_exactly_on_track19:
;MyProject.c,84 :: 		if(l==0  && r==0  && el== 0  && er==0 && intersection_flage==0 ){
0x0158	0xB282      	BTFSC       PORTC, 1 
0x015A	0xD097      	BRA         L_moving_exactly_on_track22
0x015C	0xB482      	BTFSC       PORTC, 2 
0x015E	0xD095      	BRA         L_moving_exactly_on_track22
0x0160	0xB082      	BTFSC       PORTC, 0 
0x0162	0xD093      	BRA         L_moving_exactly_on_track22
0x0164	0xB682      	BTFSC       PORTC, 3 
0x0166	0xD091      	BRA         L_moving_exactly_on_track22
0x0168	0x0E00      	MOVLW       0
0x016A	0x1834      	XORWF       _intersection_flage+1, 0 
0x016C	0xE102      	BNZ         L__moving_exactly_on_track145
0x016E	0x0E00      	MOVLW       0
0x0170	0x1833      	XORWF       _intersection_flage, 0 
L__moving_exactly_on_track145:
0x0172	0xA4D8      	BTFSS       STATUS, 2 
0x0174	0xD08A      	BRA         L_moving_exactly_on_track22
L__moving_exactly_on_track105:
;MyProject.c,86 :: 		delay_ms(100);
0x0176	0x0E02      	MOVLW       2
0x0178	0x6E0B      	MOVWF       R11, 0
0x017A	0x0E04      	MOVLW       4
0x017C	0x6E0C      	MOVWF       R12, 0
0x017E	0x0EBA      	MOVLW       186
0x0180	0x6E0D      	MOVWF       R13, 0
L_moving_exactly_on_track23:
0x0182	0x2E0D      	DECFSZ      R13, 1, 0
0x0184	0xD7FE      	BRA         L_moving_exactly_on_track23
0x0186	0x2E0C      	DECFSZ      R12, 1, 0
0x0188	0xD7FC      	BRA         L_moving_exactly_on_track23
0x018A	0x2E0B      	DECFSZ      R11, 1, 0
0x018C	0xD7FA      	BRA         L_moving_exactly_on_track23
0x018E	0x0000      	NOP
;MyProject.c,87 :: 		intersection_flage=1;
0x0190	0x0E01      	MOVLW       1
0x0192	0x6E33      	MOVWF       _intersection_flage 
0x0194	0x0E00      	MOVLW       0
0x0196	0x6E34      	MOVWF       _intersection_flage+1 
;MyProject.c,88 :: 		if(x>0 && y<0 &&  mark1==1 ||x<0 && y>0 &&  mark1==1 ){
0x0198	0x0E80      	MOVLW       128
0x019A	0x6E00      	MOVWF       R0 
0x019C	0x0E80      	MOVLW       128
0x019E	0x182A      	XORWF       _x+1, 0 
0x01A0	0x5C00      	SUBWF       R0, 0 
0x01A2	0xE102      	BNZ         L__moving_exactly_on_track146
0x01A4	0x5029      	MOVF        _x, 0 
0x01A6	0x0800      	SUBLW       0
L__moving_exactly_on_track146:
0x01A8	0xE210      	BC          L__moving_exactly_on_track104
0x01AA	0x0E80      	MOVLW       128
0x01AC	0x1820      	XORWF       _y+1, 0 
0x01AE	0x6E00      	MOVWF       R0 
0x01B0	0x0E80      	MOVLW       128
0x01B2	0x5C00      	SUBWF       R0, 0 
0x01B4	0xE102      	BNZ         L__moving_exactly_on_track147
0x01B6	0x0E00      	MOVLW       0
0x01B8	0x5C1F      	SUBWF       _y, 0 
L__moving_exactly_on_track147:
0x01BA	0xE207      	BC          L__moving_exactly_on_track104
0x01BC	0x0E00      	MOVLW       0
0x01BE	0x1830      	XORWF       _mark1+1, 0 
0x01C0	0xE102      	BNZ         L__moving_exactly_on_track148
0x01C2	0x0E01      	MOVLW       1
0x01C4	0x182F      	XORWF       _mark1, 0 
L__moving_exactly_on_track148:
0x01C6	0xE101      	BNZ         L__moving_exactly_on_track104
0x01C8	0xD01A      	BRA         L__moving_exactly_on_track102
L__moving_exactly_on_track104:
0x01CA	0x0E80      	MOVLW       128
0x01CC	0x182A      	XORWF       _x+1, 0 
0x01CE	0x6E00      	MOVWF       R0 
0x01D0	0x0E80      	MOVLW       128
0x01D2	0x5C00      	SUBWF       R0, 0 
0x01D4	0xE102      	BNZ         L__moving_exactly_on_track149
0x01D6	0x0E00      	MOVLW       0
0x01D8	0x5C29      	SUBWF       _x, 0 
L__moving_exactly_on_track149:
0x01DA	0xE210      	BC          L__moving_exactly_on_track103
0x01DC	0x0E80      	MOVLW       128
0x01DE	0x6E00      	MOVWF       R0 
0x01E0	0x0E80      	MOVLW       128
0x01E2	0x1820      	XORWF       _y+1, 0 
0x01E4	0x5C00      	SUBWF       R0, 0 
0x01E6	0xE102      	BNZ         L__moving_exactly_on_track150
0x01E8	0x501F      	MOVF        _y, 0 
0x01EA	0x0800      	SUBLW       0
L__moving_exactly_on_track150:
0x01EC	0xE207      	BC          L__moving_exactly_on_track103
0x01EE	0x0E00      	MOVLW       0
0x01F0	0x1830      	XORWF       _mark1+1, 0 
0x01F2	0xE102      	BNZ         L__moving_exactly_on_track151
0x01F4	0x0E01      	MOVLW       1
0x01F6	0x182F      	XORWF       _mark1, 0 
L__moving_exactly_on_track151:
0x01F8	0xE101      	BNZ         L__moving_exactly_on_track103
0x01FA	0xD001      	BRA         L__moving_exactly_on_track102
L__moving_exactly_on_track103:
0x01FC	0xD005      	BRA         L_moving_exactly_on_track30
L__moving_exactly_on_track102:
;MyProject.c,89 :: 		poss--;
0x01FE	0x0E01      	MOVLW       1
0x0200	0x5E1D      	SUBWF       _poss, 1 
0x0202	0x0E00      	MOVLW       0
0x0204	0x5A1E      	SUBWFB      _poss+1, 1 
;MyProject.c,90 :: 		}
0x0206	0xD041      	BRA         L_moving_exactly_on_track31
L_moving_exactly_on_track30:
;MyProject.c,91 :: 		else if(x <0 && y<0 && mark2==1 || y<0 && x==0 || x<0 && y==0){
0x0208	0x0E80      	MOVLW       128
0x020A	0x182A      	XORWF       _x+1, 0 
0x020C	0x6E00      	MOVWF       R0 
0x020E	0x0E80      	MOVLW       128
0x0210	0x5C00      	SUBWF       R0, 0 
0x0212	0xE102      	BNZ         L__moving_exactly_on_track152
0x0214	0x0E00      	MOVLW       0
0x0216	0x5C29      	SUBWF       _x, 0 
L__moving_exactly_on_track152:
0x0218	0xE210      	BC          L__moving_exactly_on_track101
0x021A	0x0E80      	MOVLW       128
0x021C	0x1820      	XORWF       _y+1, 0 
0x021E	0x6E00      	MOVWF       R0 
0x0220	0x0E80      	MOVLW       128
0x0222	0x5C00      	SUBWF       R0, 0 
0x0224	0xE102      	BNZ         L__moving_exactly_on_track153
0x0226	0x0E00      	MOVLW       0
0x0228	0x5C1F      	SUBWF       _y, 0 
L__moving_exactly_on_track153:
0x022A	0xE207      	BC          L__moving_exactly_on_track101
0x022C	0x0E00      	MOVLW       0
0x022E	0x1822      	XORWF       _mark2+1, 0 
0x0230	0xE102      	BNZ         L__moving_exactly_on_track154
0x0232	0x0E01      	MOVLW       1
0x0234	0x1821      	XORWF       _mark2, 0 
L__moving_exactly_on_track154:
0x0236	0xE101      	BNZ         L__moving_exactly_on_track101
0x0238	0xD021      	BRA         L__moving_exactly_on_track98
L__moving_exactly_on_track101:
0x023A	0x0E80      	MOVLW       128
0x023C	0x1820      	XORWF       _y+1, 0 
0x023E	0x6E00      	MOVWF       R0 
0x0240	0x0E80      	MOVLW       128
0x0242	0x5C00      	SUBWF       R0, 0 
0x0244	0xE102      	BNZ         L__moving_exactly_on_track155
0x0246	0x0E00      	MOVLW       0
0x0248	0x5C1F      	SUBWF       _y, 0 
L__moving_exactly_on_track155:
0x024A	0xE207      	BC          L__moving_exactly_on_track100
0x024C	0x0E00      	MOVLW       0
0x024E	0x182A      	XORWF       _x+1, 0 
0x0250	0xE102      	BNZ         L__moving_exactly_on_track156
0x0252	0x0E00      	MOVLW       0
0x0254	0x1829      	XORWF       _x, 0 
L__moving_exactly_on_track156:
0x0256	0xE101      	BNZ         L__moving_exactly_on_track100
0x0258	0xD011      	BRA         L__moving_exactly_on_track98
L__moving_exactly_on_track100:
0x025A	0x0E80      	MOVLW       128
0x025C	0x182A      	XORWF       _x+1, 0 
0x025E	0x6E00      	MOVWF       R0 
0x0260	0x0E80      	MOVLW       128
0x0262	0x5C00      	SUBWF       R0, 0 
0x0264	0xE102      	BNZ         L__moving_exactly_on_track157
0x0266	0x0E00      	MOVLW       0
0x0268	0x5C29      	SUBWF       _x, 0 
L__moving_exactly_on_track157:
0x026A	0xE207      	BC          L__moving_exactly_on_track99
0x026C	0x0E00      	MOVLW       0
0x026E	0x1820      	XORWF       _y+1, 0 
0x0270	0xE102      	BNZ         L__moving_exactly_on_track158
0x0272	0x0E00      	MOVLW       0
0x0274	0x181F      	XORWF       _y, 0 
L__moving_exactly_on_track158:
0x0276	0xE101      	BNZ         L__moving_exactly_on_track99
0x0278	0xD001      	BRA         L__moving_exactly_on_track98
L__moving_exactly_on_track99:
0x027A	0xD005      	BRA         L_moving_exactly_on_track40
L__moving_exactly_on_track98:
;MyProject.c,92 :: 		poss--;
0x027C	0x0E01      	MOVLW       1
0x027E	0x5E1D      	SUBWF       _poss, 1 
0x0280	0x0E00      	MOVLW       0
0x0282	0x5A1E      	SUBWFB      _poss+1, 1 
;MyProject.c,93 :: 		}
0x0284	0xD002      	BRA         L_moving_exactly_on_track41
L_moving_exactly_on_track40:
;MyProject.c,94 :: 		else poss++;
0x0286	0x4A1D      	INFSNZ      _poss, 1 
0x0288	0x2A1E      	INCF        _poss+1, 1 
L_moving_exactly_on_track41:
L_moving_exactly_on_track31:
;MyProject.c,96 :: 		}
L_moving_exactly_on_track22:
;MyProject.c,97 :: 		if(el == 0 && er==0){
0x028A	0xB082      	BTFSC       PORTC, 0 
0x028C	0xD004      	BRA         L_moving_exactly_on_track44
0x028E	0xB682      	BTFSC       PORTC, 3 
0x0290	0xD002      	BRA         L_moving_exactly_on_track44
L__moving_exactly_on_track97:
;MyProject.c,98 :: 		intersection_flage=0;
0x0292	0x6A33      	CLRF        _intersection_flage 
0x0294	0x6A34      	CLRF        _intersection_flage+1 
;MyProject.c,99 :: 		}
L_moving_exactly_on_track44:
;MyProject.c,101 :: 		}
L_end_moving_exactly_on_track:
0x0296	0x0012      	RETURN      0
; end of _moving_exactly_on_track
_roboot_off:
;MyProject.c,266 :: 		void roboot_off(){
;MyProject.c,267 :: 		IN1=0;
0x0298	0x9283      	BCF         PORTD, 1 
;MyProject.c,268 :: 		IN2=0;
0x029A	0x9483      	BCF         PORTD, 2 
;MyProject.c,269 :: 		IN3=0;
0x029C	0x9683      	BCF         PORTD, 3 
;MyProject.c,270 :: 		IN4=0;
0x029E	0x9883      	BCF         PORTD, 4 
;MyProject.c,271 :: 		IN5=0;
0x02A0	0x9A83      	BCF         PORTD, 5 
;MyProject.c,272 :: 		IN6=0;
0x02A2	0x9C83      	BCF         PORTD, 6 
;MyProject.c,273 :: 		IN7=0;
0x02A4	0x9E83      	BCF         PORTD, 7 
;MyProject.c,274 :: 		IN8=0;
0x02A6	0x9083      	BCF         PORTD, 0 
;MyProject.c,276 :: 		}
L_end_roboot_off:
0x02A8	0x0012      	RETURN      0
; end of _roboot_off
_roboot_right_90:
;MyProject.c,243 :: 		void roboot_right_90(){
;MyProject.c,244 :: 		IN1=1;
0x02AA	0x8283      	BSF         PORTD, 1 
;MyProject.c,245 :: 		IN2=0;        //REVERS LOGIC TO BE FORWAED
0x02AC	0x9483      	BCF         PORTD, 2 
;MyProject.c,246 :: 		IN3=1;
0x02AE	0x8683      	BSF         PORTD, 3 
;MyProject.c,247 :: 		IN4=0;
0x02B0	0x9883      	BCF         PORTD, 4 
;MyProject.c,248 :: 		IN5=1;
0x02B2	0x8A83      	BSF         PORTD, 5 
;MyProject.c,249 :: 		IN6=0;       /// REVERS LOGIC TO BE FOWARD
0x02B4	0x9C83      	BCF         PORTD, 6 
;MyProject.c,250 :: 		IN7=1;
0x02B6	0x8E83      	BSF         PORTD, 7 
;MyProject.c,251 :: 		IN8=0;
0x02B8	0x9083      	BCF         PORTD, 0 
;MyProject.c,252 :: 		delay_ms(600);
0x02BA	0x0E07      	MOVLW       7
0x02BC	0x6E0B      	MOVWF       R11, 0
0x02BE	0x0E17      	MOVLW       23
0x02C0	0x6E0C      	MOVWF       R12, 0
0x02C2	0x0E6A      	MOVLW       106
0x02C4	0x6E0D      	MOVWF       R13, 0
L_roboot_right_9078:
0x02C6	0x2E0D      	DECFSZ      R13, 1, 0
0x02C8	0xD7FE      	BRA         L_roboot_right_9078
0x02CA	0x2E0C      	DECFSZ      R12, 1, 0
0x02CC	0xD7FC      	BRA         L_roboot_right_9078
0x02CE	0x2E0B      	DECFSZ      R11, 1, 0
0x02D0	0xD7FA      	BRA         L_roboot_right_9078
0x02D2	0x0000      	NOP
;MyProject.c,254 :: 		}
L_end_roboot_right_90:
0x02D4	0x0012      	RETURN      0
; end of _roboot_right_90
_excute_x:
;MyProject.c,317 :: 		void excute_x(){
;MyProject.c,318 :: 		loop1:
___excute_x_loop1:
;MyProject.c,319 :: 		if(x>poss){
0x02D6	0x0E80      	MOVLW       128
0x02D8	0x181E      	XORWF       _poss+1, 0 
0x02DA	0x6E00      	MOVWF       R0 
0x02DC	0x0E80      	MOVLW       128
0x02DE	0x182A      	XORWF       _x+1, 0 
0x02E0	0x5C00      	SUBWF       R0, 0 
0x02E2	0xE102      	BNZ         L__excute_x193
0x02E4	0x5029      	MOVF        _x, 0 
0x02E6	0x5C1D      	SUBWF       _poss, 0 
L__excute_x193:
0x02E8	0xE202      	BC          L_excute_x88
;MyProject.c,320 :: 		moving_exactly_on_track ();
0x02EA	0xDECE      	RCALL       _moving_exactly_on_track
;MyProject.c,321 :: 		}
0x02EC	0xD00A      	BRA         L_excute_x89
L_excute_x88:
;MyProject.c,322 :: 		else if(  x==poss){
0x02EE	0x502A      	MOVF        _x+1, 0 
0x02F0	0x181E      	XORWF       _poss+1, 0 
0x02F2	0xE102      	BNZ         L__excute_x194
0x02F4	0x501D      	MOVF        _poss, 0 
0x02F6	0x1829      	XORWF       _x, 0 
L__excute_x194:
0x02F8	0xE104      	BNZ         L_excute_x90
;MyProject.c,323 :: 		roboot_off();
0x02FA	0xDFCE      	RCALL       _roboot_off
;MyProject.c,324 :: 		poss=0;
0x02FC	0x6A1D      	CLRF        _poss 
0x02FE	0x6A1E      	CLRF        _poss+1 
;MyProject.c,325 :: 		goto loop2;
0x0300	0xD001      	BRA         ___excute_x_loop2
;MyProject.c,327 :: 		}
L_excute_x90:
L_excute_x89:
;MyProject.c,328 :: 		goto loop1;
0x0302	0xD7E9      	BRA         ___excute_x_loop1
;MyProject.c,329 :: 		loop2:
___excute_x_loop2:
;MyProject.c,330 :: 		poss=0;
0x0304	0x6A1D      	CLRF        _poss 
0x0306	0x6A1E      	CLRF        _poss+1 
;MyProject.c,331 :: 		}
L_end_excute_x:
0x0308	0x0012      	RETURN      0
; end of _excute_x
_get_sensor_value:
;MyProject.c,60 :: 		void get_sensor_value(){
;MyProject.c,61 :: 		el= ex_left;
0x030A	0xB02D      	BTFSC       _ex_left, 0 
0x030C	0xD002      	BRA         L__get_sensor_value123
0x030E	0x9082      	BCF         PORTC, 0 
0x0310	0xD001      	BRA         L__get_sensor_value124
L__get_sensor_value123:
0x0312	0x8082      	BSF         PORTC, 0 
L__get_sensor_value124:
;MyProject.c,62 :: 		l=  left;
0x0314	0xB02B      	BTFSC       _left, 0 
0x0316	0xD002      	BRA         L__get_sensor_value125
0x0318	0x9282      	BCF         PORTC, 1 
0x031A	0xD001      	BRA         L__get_sensor_value126
L__get_sensor_value125:
0x031C	0x8282      	BSF         PORTC, 1 
L__get_sensor_value126:
;MyProject.c,63 :: 		r=  right;
0x031E	0xB027      	BTFSC       _right, 0 
0x0320	0xD002      	BRA         L__get_sensor_value127
0x0322	0x9482      	BCF         PORTC, 2 
0x0324	0xD001      	BRA         L__get_sensor_value128
L__get_sensor_value127:
0x0326	0x8482      	BSF         PORTC, 2 
L__get_sensor_value128:
;MyProject.c,64 :: 		er= ex_right;
0x0328	0xB025      	BTFSC       _ex_right, 0 
0x032A	0xD002      	BRA         L__get_sensor_value129
0x032C	0x9682      	BCF         PORTC, 3 
0x032E	0xD001      	BRA         L__get_sensor_value130
L__get_sensor_value129:
0x0330	0x8682      	BSF         PORTC, 3 
L__get_sensor_value130:
;MyProject.c,67 :: 		}
L_end_get_sensor_value:
0x0332	0x0012      	RETURN      0
; end of _get_sensor_value
_excute_x_negative:
;MyProject.c,347 :: 		void excute_x_negative (){
;MyProject.c,348 :: 		loop1:
___excute_x_negative_loop1:
;MyProject.c,349 :: 		if(x<poss){
0x0334	0x0E80      	MOVLW       128
0x0336	0x182A      	XORWF       _x+1, 0 
0x0338	0x6E00      	MOVWF       R0 
0x033A	0x0E80      	MOVLW       128
0x033C	0x181E      	XORWF       _poss+1, 0 
0x033E	0x5C00      	SUBWF       R0, 0 
0x0340	0xE102      	BNZ         L__excute_x_negative199
0x0342	0x501D      	MOVF        _poss, 0 
0x0344	0x5C29      	SUBWF       _x, 0 
L__excute_x_negative199:
0x0346	0xE202      	BC          L_excute_x_negative94
;MyProject.c,350 :: 		moving_exactly_on_track ();
0x0348	0xDE9F      	RCALL       _moving_exactly_on_track
;MyProject.c,352 :: 		}
0x034A	0xD00A      	BRA         L_excute_x_negative95
L_excute_x_negative94:
;MyProject.c,353 :: 		else if (x==poss){
0x034C	0x502A      	MOVF        _x+1, 0 
0x034E	0x181E      	XORWF       _poss+1, 0 
0x0350	0xE102      	BNZ         L__excute_x_negative200
0x0352	0x501D      	MOVF        _poss, 0 
0x0354	0x1829      	XORWF       _x, 0 
L__excute_x_negative200:
0x0356	0xE104      	BNZ         L_excute_x_negative96
;MyProject.c,354 :: 		roboot_off();
0x0358	0xDF9F      	RCALL       _roboot_off
;MyProject.c,355 :: 		poss=0;
0x035A	0x6A1D      	CLRF        _poss 
0x035C	0x6A1E      	CLRF        _poss+1 
;MyProject.c,356 :: 		goto loop2;
0x035E	0xD001      	BRA         ___excute_x_negative_loop2
;MyProject.c,357 :: 		}
L_excute_x_negative96:
L_excute_x_negative95:
;MyProject.c,358 :: 		goto loop1;
0x0360	0xD7E9      	BRA         ___excute_x_negative_loop1
;MyProject.c,359 :: 		loop2:
___excute_x_negative_loop2:
;MyProject.c,360 :: 		poss=0;
0x0362	0x6A1D      	CLRF        _poss 
0x0364	0x6A1E      	CLRF        _poss+1 
;MyProject.c,361 :: 		}
L_end_excute_x_negative:
0x0366	0x0012      	RETURN      0
; end of _excute_x_negative
_excute_y:
;MyProject.c,301 :: 		void excute_y(){
;MyProject.c,302 :: 		loop1:
___excute_y_loop1:
;MyProject.c,303 :: 		if(y>poss){
0x0368	0x0E80      	MOVLW       128
0x036A	0x181E      	XORWF       _poss+1, 0 
0x036C	0x6E00      	MOVWF       R0 
0x036E	0x0E80      	MOVLW       128
0x0370	0x1820      	XORWF       _y+1, 0 
0x0372	0x5C00      	SUBWF       R0, 0 
0x0374	0xE102      	BNZ         L__excute_y190
0x0376	0x501F      	MOVF        _y, 0 
0x0378	0x5C1D      	SUBWF       _poss, 0 
L__excute_y190:
0x037A	0xE202      	BC          L_excute_y85
;MyProject.c,304 :: 		moving_exactly_on_track ();
0x037C	0xDE85      	RCALL       _moving_exactly_on_track
;MyProject.c,306 :: 		}
0x037E	0xD00A      	BRA         L_excute_y86
L_excute_y85:
;MyProject.c,307 :: 		else if (y==poss){
0x0380	0x5020      	MOVF        _y+1, 0 
0x0382	0x181E      	XORWF       _poss+1, 0 
0x0384	0xE102      	BNZ         L__excute_y191
0x0386	0x501D      	MOVF        _poss, 0 
0x0388	0x181F      	XORWF       _y, 0 
L__excute_y191:
0x038A	0xE104      	BNZ         L_excute_y87
;MyProject.c,308 :: 		roboot_off();
0x038C	0xDF85      	RCALL       _roboot_off
;MyProject.c,309 :: 		poss=0;
0x038E	0x6A1D      	CLRF        _poss 
0x0390	0x6A1E      	CLRF        _poss+1 
;MyProject.c,310 :: 		goto loop2;
0x0392	0xD001      	BRA         ___excute_y_loop2
;MyProject.c,311 :: 		}
L_excute_y87:
L_excute_y86:
;MyProject.c,312 :: 		goto loop1;
0x0394	0xD7E9      	BRA         ___excute_y_loop1
;MyProject.c,313 :: 		loop2 :
___excute_y_loop2:
;MyProject.c,314 :: 		poss=0;
0x0396	0x6A1D      	CLRF        _poss 
0x0398	0x6A1E      	CLRF        _poss+1 
;MyProject.c,316 :: 		}
L_end_excute_y:
0x039A	0x0012      	RETURN      0
; end of _excute_y
_change_orintation:
;MyProject.c,277 :: 		void  change_orintation(){
;MyProject.c,279 :: 		if(state==2){
0x039C	0x0E00      	MOVLW       0
0x039E	0x1824      	XORWF       _state+1, 0 
0x03A0	0xE102      	BNZ         L__change_orintation186
0x03A2	0x0E02      	MOVLW       2
0x03A4	0x1823      	XORWF       _state, 0 
L__change_orintation186:
0x03A6	0xE105      	BNZ         L_change_orintation80
;MyProject.c,280 :: 		roboot_left_180();
0x03A8	0xDE58      	RCALL       _roboot_left_180
;MyProject.c,281 :: 		roboot_off();
0x03AA	0xDF76      	RCALL       _roboot_off
;MyProject.c,282 :: 		state=0;
0x03AC	0x6A23      	CLRF        _state 
0x03AE	0x6A24      	CLRF        _state+1 
;MyProject.c,283 :: 		}
0x03B0	0xD017      	BRA         L_change_orintation81
L_change_orintation80:
;MyProject.c,284 :: 		else if(state==4){
0x03B2	0x0E00      	MOVLW       0
0x03B4	0x1824      	XORWF       _state+1, 0 
0x03B6	0xE102      	BNZ         L__change_orintation187
0x03B8	0x0E04      	MOVLW       4
0x03BA	0x1823      	XORWF       _state, 0 
L__change_orintation187:
0x03BC	0xE106      	BNZ         L_change_orintation82
;MyProject.c,285 :: 		step_foward();
0x03BE	0xDE2E      	RCALL       _step_foward
;MyProject.c,286 :: 		roboot_left_90();
0x03C0	0xDE36      	RCALL       _roboot_left_90
;MyProject.c,287 :: 		roboot_off();
0x03C2	0xDF6A      	RCALL       _roboot_off
;MyProject.c,288 :: 		state=0;
0x03C4	0x6A23      	CLRF        _state 
0x03C6	0x6A24      	CLRF        _state+1 
;MyProject.c,289 :: 		}
0x03C8	0xD00B      	BRA         L_change_orintation83
L_change_orintation82:
;MyProject.c,290 :: 		else if( state==3){
0x03CA	0x0E00      	MOVLW       0
0x03CC	0x1824      	XORWF       _state+1, 0 
0x03CE	0xE102      	BNZ         L__change_orintation188
0x03D0	0x0E03      	MOVLW       3
0x03D2	0x1823      	XORWF       _state, 0 
L__change_orintation188:
0x03D4	0xE105      	BNZ         L_change_orintation84
;MyProject.c,291 :: 		step_foward();
0x03D6	0xDE22      	RCALL       _step_foward
;MyProject.c,292 :: 		roboot_right_90();
0x03D8	0xDF68      	RCALL       _roboot_right_90
;MyProject.c,293 :: 		roboot_off();
0x03DA	0xDF5E      	RCALL       _roboot_off
;MyProject.c,294 :: 		state=0;
0x03DC	0x6A23      	CLRF        _state 
0x03DE	0x6A24      	CLRF        _state+1 
;MyProject.c,295 :: 		}
L_change_orintation84:
L_change_orintation83:
L_change_orintation81:
;MyProject.c,297 :: 		}
L_end_change_orintation:
0x03E0	0x0012      	RETURN      0
; end of _change_orintation
_excute_y_negative:
;MyProject.c,332 :: 		void excute_y_negative (){
;MyProject.c,333 :: 		loop1:
___excute_y_negative_loop1:
;MyProject.c,334 :: 		if(y<poss){
0x03E2	0x0E80      	MOVLW       128
0x03E4	0x1820      	XORWF       _y+1, 0 
0x03E6	0x6E00      	MOVWF       R0 
0x03E8	0x0E80      	MOVLW       128
0x03EA	0x181E      	XORWF       _poss+1, 0 
0x03EC	0x5C00      	SUBWF       R0, 0 
0x03EE	0xE102      	BNZ         L__excute_y_negative196
0x03F0	0x501D      	MOVF        _poss, 0 
0x03F2	0x5C1F      	SUBWF       _y, 0 
L__excute_y_negative196:
0x03F4	0xE202      	BC          L_excute_y_negative91
;MyProject.c,335 :: 		moving_exactly_on_track ();
0x03F6	0xDE48      	RCALL       _moving_exactly_on_track
;MyProject.c,337 :: 		}
0x03F8	0xD00A      	BRA         L_excute_y_negative92
L_excute_y_negative91:
;MyProject.c,338 :: 		else if (y==poss){
0x03FA	0x5020      	MOVF        _y+1, 0 
0x03FC	0x181E      	XORWF       _poss+1, 0 
0x03FE	0xE102      	BNZ         L__excute_y_negative197
0x0400	0x501D      	MOVF        _poss, 0 
0x0402	0x181F      	XORWF       _y, 0 
L__excute_y_negative197:
0x0404	0xE104      	BNZ         L_excute_y_negative93
;MyProject.c,339 :: 		roboot_off();
0x0406	0xDF48      	RCALL       _roboot_off
;MyProject.c,340 :: 		poss=0;
0x0408	0x6A1D      	CLRF        _poss 
0x040A	0x6A1E      	CLRF        _poss+1 
;MyProject.c,341 :: 		goto loop2;
0x040C	0xD001      	BRA         ___excute_y_negative_loop2
;MyProject.c,342 :: 		}
L_excute_y_negative93:
L_excute_y_negative92:
;MyProject.c,343 :: 		goto loop1;
0x040E	0xD7E9      	BRA         ___excute_y_negative_loop1
;MyProject.c,344 :: 		loop2:
___excute_y_negative_loop2:
;MyProject.c,345 :: 		poss=0;
0x0410	0x6A1D      	CLRF        _poss 
0x0412	0x6A1E      	CLRF        _poss+1 
;MyProject.c,346 :: 		}
L_end_excute_y_negative:
0x0414	0x0012      	RETURN      0
; end of _excute_y_negative
___CC2DW:
;__Lib_System.c,21 :: 		
;__Lib_System.c,23 :: 		
_CC2DL_Loop1:
;__Lib_System.c,24 :: 		
0x0416	0x0009      	TBLRD*+
;__Lib_System.c,25 :: 		
0x0418	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System.c,26 :: 		
0x041C	0x0600      	DECF        R0, 1, 0
;__Lib_System.c,27 :: 		
0x041E	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System.c,28 :: 		
0x0420	0x0601      	DECF        R1, 1, 0
;__Lib_System.c,29 :: 		
0x0422	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System.c,31 :: 		
L_end___CC2DW:
0x0424	0x0012      	RETURN      0
; end of ___CC2DW
_moving_robot:
;MyProject.c,102 :: 		void moving_robot(){
;MyProject.c,103 :: 		x=target_x-ox;
0x0426	0x5017      	MOVF        _ox, 0 
0x0428	0x5C15      	SUBWF       _target_x, 0 
0x042A	0x6E01      	MOVWF       R1 
0x042C	0x5018      	MOVF        _ox+1, 0 
0x042E	0x5816      	SUBWFB      _target_x+1, 0 
0x0430	0x6E02      	MOVWF       R2 
0x0432	0xF029C001  	MOVFF       R1, _x
0x0436	0xF02AC002  	MOVFF       R2, _x+1
;MyProject.c,104 :: 		y=target_y-oy;
0x043A	0x5019      	MOVF        _oy, 0 
0x043C	0x5C1B      	SUBWF       _target_y, 0 
0x043E	0x6E1F      	MOVWF       _y 
0x0440	0x501A      	MOVF        _oy+1, 0 
0x0442	0x581C      	SUBWFB      _target_y+1, 0 
0x0444	0x6E20      	MOVWF       _y+1 
;MyProject.c,105 :: 		if ( x>0 && y >0 ){            // satate 1
0x0446	0x0E80      	MOVLW       128
0x0448	0x6E00      	MOVWF       R0 
0x044A	0x0E80      	MOVLW       128
0x044C	0x1802      	XORWF       R2, 0 
0x044E	0x5C00      	SUBWF       R0, 0 
0x0450	0xE102      	BNZ         L__moving_robot160
0x0452	0x5001      	MOVF        R1, 0 
0x0454	0x0800      	SUBLW       0
L__moving_robot160:
0x0456	0xE20E      	BC          L_moving_robot47
0x0458	0x0E80      	MOVLW       128
0x045A	0x6E00      	MOVWF       R0 
0x045C	0x0E80      	MOVLW       128
0x045E	0x1820      	XORWF       _y+1, 0 
0x0460	0x5C00      	SUBWF       R0, 0 
0x0462	0xE102      	BNZ         L__moving_robot161
0x0464	0x501F      	MOVF        _y, 0 
0x0466	0x0800      	SUBLW       0
L__moving_robot161:
0x0468	0xE205      	BC          L_moving_robot47
L__moving_robot120:
;MyProject.c,106 :: 		excute_y();
0x046A	0xDF7E      	RCALL       _excute_y
;MyProject.c,107 :: 		change_orintation();      // right
0x046C	0xDF97      	RCALL       _change_orintation
;MyProject.c,108 :: 		excute_x();
0x046E	0xDF33      	RCALL       _excute_x
;MyProject.c,109 :: 		change_orintation();   // to be fowward  left
0x0470	0xDF95      	RCALL       _change_orintation
;MyProject.c,111 :: 		}
0x0472	0xD0A6      	BRA         L_moving_robot48
L_moving_robot47:
;MyProject.c,112 :: 		else if( x<0 && y<0 ){         //satate 2
0x0474	0x0E80      	MOVLW       128
0x0476	0x182A      	XORWF       _x+1, 0 
0x0478	0x6E00      	MOVWF       R0 
0x047A	0x0E80      	MOVLW       128
0x047C	0x5C00      	SUBWF       R0, 0 
0x047E	0xE102      	BNZ         L__moving_robot162
0x0480	0x0E00      	MOVLW       0
0x0482	0x5C29      	SUBWF       _x, 0 
L__moving_robot162:
0x0484	0xE215      	BC          L_moving_robot51
0x0486	0x0E80      	MOVLW       128
0x0488	0x1820      	XORWF       _y+1, 0 
0x048A	0x6E00      	MOVWF       R0 
0x048C	0x0E80      	MOVLW       128
0x048E	0x5C00      	SUBWF       R0, 0 
0x0490	0xE102      	BNZ         L__moving_robot163
0x0492	0x0E00      	MOVLW       0
0x0494	0x5C1F      	SUBWF       _y, 0 
L__moving_robot163:
0x0496	0xE20C      	BC          L_moving_robot51
L__moving_robot119:
;MyProject.c,113 :: 		mark2=1;
0x0498	0x0E01      	MOVLW       1
0x049A	0x6E21      	MOVWF       _mark2 
0x049C	0x0E00      	MOVLW       0
0x049E	0x6E22      	MOVWF       _mark2+1 
;MyProject.c,114 :: 		get_sensor_value();
0x04A0	0xDF34      	RCALL       _get_sensor_value
;MyProject.c,115 :: 		excute_y_negative ();
0x04A2	0xDF9F      	RCALL       _excute_y_negative
;MyProject.c,116 :: 		change_orintation();    // right
0x04A4	0xDF7B      	RCALL       _change_orintation
;MyProject.c,117 :: 		excute_x_negative();
0x04A6	0xDF46      	RCALL       _excute_x_negative
;MyProject.c,118 :: 		change_orintation();   //right to be forward
0x04A8	0xDF79      	RCALL       _change_orintation
;MyProject.c,119 :: 		mark2=0 ;
0x04AA	0x6A21      	CLRF        _mark2 
0x04AC	0x6A22      	CLRF        _mark2+1 
;MyProject.c,120 :: 		}
0x04AE	0xD088      	BRA         L_moving_robot52
L_moving_robot51:
;MyProject.c,121 :: 		else if( x==0 && y>0 ){        //satate 3
0x04B0	0x0E00      	MOVLW       0
0x04B2	0x182A      	XORWF       _x+1, 0 
0x04B4	0xE102      	BNZ         L__moving_robot164
0x04B6	0x0E00      	MOVLW       0
0x04B8	0x1829      	XORWF       _x, 0 
L__moving_robot164:
0x04BA	0xE10C      	BNZ         L_moving_robot55
0x04BC	0x0E80      	MOVLW       128
0x04BE	0x6E00      	MOVWF       R0 
0x04C0	0x0E80      	MOVLW       128
0x04C2	0x1820      	XORWF       _y+1, 0 
0x04C4	0x5C00      	SUBWF       R0, 0 
0x04C6	0xE102      	BNZ         L__moving_robot165
0x04C8	0x501F      	MOVF        _y, 0 
0x04CA	0x0800      	SUBLW       0
L__moving_robot165:
0x04CC	0xE203      	BC          L_moving_robot55
L__moving_robot118:
;MyProject.c,122 :: 		get_sensor_value();
0x04CE	0xDF1D      	RCALL       _get_sensor_value
;MyProject.c,123 :: 		excute_y();
0x04D0	0xDF4B      	RCALL       _excute_y
;MyProject.c,126 :: 		}
0x04D2	0xD076      	BRA         L_moving_robot56
L_moving_robot55:
;MyProject.c,127 :: 		else if( x==0 && y<0 ){        //state 4
0x04D4	0x0E00      	MOVLW       0
0x04D6	0x182A      	XORWF       _x+1, 0 
0x04D8	0xE102      	BNZ         L__moving_robot166
0x04DA	0x0E00      	MOVLW       0
0x04DC	0x1829      	XORWF       _x, 0 
L__moving_robot166:
0x04DE	0xE10C      	BNZ         L_moving_robot59
0x04E0	0x0E80      	MOVLW       128
0x04E2	0x1820      	XORWF       _y+1, 0 
0x04E4	0x6E00      	MOVWF       R0 
0x04E6	0x0E80      	MOVLW       128
0x04E8	0x5C00      	SUBWF       R0, 0 
0x04EA	0xE102      	BNZ         L__moving_robot167
0x04EC	0x0E00      	MOVLW       0
0x04EE	0x5C1F      	SUBWF       _y, 0 
L__moving_robot167:
0x04F0	0xE203      	BC          L_moving_robot59
L__moving_robot117:
;MyProject.c,128 :: 		get_sensor_value();
0x04F2	0xDF0B      	RCALL       _get_sensor_value
;MyProject.c,129 :: 		excute_y_negative ();
0x04F4	0xDF76      	RCALL       _excute_y_negative
;MyProject.c,132 :: 		}
0x04F6	0xD064      	BRA         L_moving_robot60
L_moving_robot59:
;MyProject.c,133 :: 		else if( x>0 && y==0 ){     // state 5
0x04F8	0x0E80      	MOVLW       128
0x04FA	0x6E00      	MOVWF       R0 
0x04FC	0x0E80      	MOVLW       128
0x04FE	0x182A      	XORWF       _x+1, 0 
0x0500	0x5C00      	SUBWF       R0, 0 
0x0502	0xE102      	BNZ         L__moving_robot168
0x0504	0x5029      	MOVF        _x, 0 
0x0506	0x0800      	SUBLW       0
L__moving_robot168:
0x0508	0xE20B      	BC          L_moving_robot63
0x050A	0x0E00      	MOVLW       0
0x050C	0x1820      	XORWF       _y+1, 0 
0x050E	0xE102      	BNZ         L__moving_robot169
0x0510	0x0E00      	MOVLW       0
0x0512	0x181F      	XORWF       _y, 0 
L__moving_robot169:
0x0514	0xE105      	BNZ         L_moving_robot63
L__moving_robot116:
;MyProject.c,134 :: 		get_sensor_value();
0x0516	0xDEF9      	RCALL       _get_sensor_value
;MyProject.c,135 :: 		change_orintation(); // right
0x0518	0xDF41      	RCALL       _change_orintation
;MyProject.c,136 :: 		excute_x();
0x051A	0xDEDD      	RCALL       _excute_x
;MyProject.c,137 :: 		change_orintation(); // left to be forward
0x051C	0xDF3F      	RCALL       _change_orintation
;MyProject.c,139 :: 		}
0x051E	0xD050      	BRA         L_moving_robot64
L_moving_robot63:
;MyProject.c,140 :: 		else if( x<0 && y==0 ){       // satate 6
0x0520	0x0E80      	MOVLW       128
0x0522	0x182A      	XORWF       _x+1, 0 
0x0524	0x6E00      	MOVWF       R0 
0x0526	0x0E80      	MOVLW       128
0x0528	0x5C00      	SUBWF       R0, 0 
0x052A	0xE102      	BNZ         L__moving_robot170
0x052C	0x0E00      	MOVLW       0
0x052E	0x5C29      	SUBWF       _x, 0 
L__moving_robot170:
0x0530	0xE20B      	BC          L_moving_robot67
0x0532	0x0E00      	MOVLW       0
0x0534	0x1820      	XORWF       _y+1, 0 
0x0536	0xE102      	BNZ         L__moving_robot171
0x0538	0x0E00      	MOVLW       0
0x053A	0x181F      	XORWF       _y, 0 
L__moving_robot171:
0x053C	0xE105      	BNZ         L_moving_robot67
L__moving_robot115:
;MyProject.c,141 :: 		get_sensor_value();
0x053E	0xDEE5      	RCALL       _get_sensor_value
;MyProject.c,142 :: 		change_orintation(); // left
0x0540	0xDF2D      	RCALL       _change_orintation
;MyProject.c,143 :: 		excute_x_negative();
0x0542	0xDEF8      	RCALL       _excute_x_negative
;MyProject.c,144 :: 		change_orintation(); //rigth to e forward
0x0544	0xDF2B      	RCALL       _change_orintation
;MyProject.c,145 :: 		}
0x0546	0xD03C      	BRA         L_moving_robot68
L_moving_robot67:
;MyProject.c,146 :: 		else if( x>0 && y<0 ){      // satate 7
0x0548	0x0E80      	MOVLW       128
0x054A	0x6E00      	MOVWF       R0 
0x054C	0x0E80      	MOVLW       128
0x054E	0x182A      	XORWF       _x+1, 0 
0x0550	0x5C00      	SUBWF       R0, 0 
0x0552	0xE102      	BNZ         L__moving_robot172
0x0554	0x5029      	MOVF        _x, 0 
0x0556	0x0800      	SUBLW       0
L__moving_robot172:
0x0558	0xE216      	BC          L_moving_robot71
0x055A	0x0E80      	MOVLW       128
0x055C	0x1820      	XORWF       _y+1, 0 
0x055E	0x6E00      	MOVWF       R0 
0x0560	0x0E80      	MOVLW       128
0x0562	0x5C00      	SUBWF       R0, 0 
0x0564	0xE102      	BNZ         L__moving_robot173
0x0566	0x0E00      	MOVLW       0
0x0568	0x5C1F      	SUBWF       _y, 0 
L__moving_robot173:
0x056A	0xE20D      	BC          L_moving_robot71
L__moving_robot114:
;MyProject.c,147 :: 		get_sensor_value();
0x056C	0xDECE      	RCALL       _get_sensor_value
;MyProject.c,148 :: 		change_orintation(); // right
0x056E	0xDF16      	RCALL       _change_orintation
;MyProject.c,149 :: 		excute_x();
0x0570	0xDEB2      	RCALL       _excute_x
;MyProject.c,150 :: 		mark1=1;
0x0572	0x0E01      	MOVLW       1
0x0574	0x6E2F      	MOVWF       _mark1 
0x0576	0x0E00      	MOVLW       0
0x0578	0x6E30      	MOVWF       _mark1+1 
;MyProject.c,151 :: 		change_orintation(); // right
0x057A	0xDF10      	RCALL       _change_orintation
;MyProject.c,152 :: 		excute_y_negative ();
0x057C	0xDF32      	RCALL       _excute_y_negative
;MyProject.c,153 :: 		change_orintation(); // 180 to be forward
0x057E	0xDF0E      	RCALL       _change_orintation
;MyProject.c,154 :: 		mark1=0;
0x0580	0x6A2F      	CLRF        _mark1 
0x0582	0x6A30      	CLRF        _mark1+1 
;MyProject.c,157 :: 		}
0x0584	0xD01D      	BRA         L_moving_robot72
L_moving_robot71:
;MyProject.c,158 :: 		else if( x<0 && y>0 ){           //satte 8
0x0586	0x0E80      	MOVLW       128
0x0588	0x182A      	XORWF       _x+1, 0 
0x058A	0x6E00      	MOVWF       R0 
0x058C	0x0E80      	MOVLW       128
0x058E	0x5C00      	SUBWF       R0, 0 
0x0590	0xE102      	BNZ         L__moving_robot174
0x0592	0x0E00      	MOVLW       0
0x0594	0x5C29      	SUBWF       _x, 0 
L__moving_robot174:
0x0596	0xE214      	BC          L_moving_robot75
0x0598	0x0E80      	MOVLW       128
0x059A	0x6E00      	MOVWF       R0 
0x059C	0x0E80      	MOVLW       128
0x059E	0x1820      	XORWF       _y+1, 0 
0x05A0	0x5C00      	SUBWF       R0, 0 
0x05A2	0xE102      	BNZ         L__moving_robot175
0x05A4	0x501F      	MOVF        _y, 0 
0x05A6	0x0800      	SUBLW       0
L__moving_robot175:
0x05A8	0xE20B      	BC          L_moving_robot75
L__moving_robot113:
;MyProject.c,159 :: 		get_sensor_value();
0x05AA	0xDEAF      	RCALL       _get_sensor_value
;MyProject.c,160 :: 		excute_y();
0x05AC	0xDEDD      	RCALL       _excute_y
;MyProject.c,161 :: 		mark1=1;
0x05AE	0x0E01      	MOVLW       1
0x05B0	0x6E2F      	MOVWF       _mark1 
0x05B2	0x0E00      	MOVLW       0
0x05B4	0x6E30      	MOVWF       _mark1+1 
;MyProject.c,162 :: 		change_orintation(); // right
0x05B6	0xDEF2      	RCALL       _change_orintation
;MyProject.c,163 :: 		excute_x_negative ();
0x05B8	0xDEBD      	RCALL       _excute_x_negative
;MyProject.c,164 :: 		change_orintation(); // right to be forward
0x05BA	0xDEF0      	RCALL       _change_orintation
;MyProject.c,165 :: 		mark1=0;
0x05BC	0x6A2F      	CLRF        _mark1 
0x05BE	0x6A30      	CLRF        _mark1+1 
;MyProject.c,169 :: 		}
L_moving_robot75:
L_moving_robot72:
L_moving_robot68:
L_moving_robot64:
L_moving_robot60:
L_moving_robot56:
L_moving_robot52:
L_moving_robot48:
;MyProject.c,171 :: 		}
L_end_moving_robot:
0x05C0	0x0012      	RETURN      0
; end of _moving_robot
_main:
0x05C2	0xF002ECF2  	CALL        1508, 0
;MyProject.c,46 :: 		void main() {
;MyProject.c,47 :: 		trisc.b0=1;  trisc.b1=1; trisc.b2=1; trisc.b3=1;
0x05C6	0x8094      	BSF         TRISC, 0 
0x05C8	0x8294      	BSF         TRISC, 1 
0x05CA	0x8494      	BSF         TRISC, 2 
0x05CC	0x8694      	BSF         TRISC, 3 
;MyProject.c,48 :: 		while(1){
L_main0:
;MyProject.c,51 :: 		moving_robot();
0x05CE	0xDF2B      	RCALL       _moving_robot
;MyProject.c,52 :: 		}
0x05D0	0xD7FE      	BRA         L_main0
;MyProject.c,54 :: 		}
L_end_main:
0x05D2	0xD7FF      	BRA         $+0
; end of _main
0x05E4	0xF015EE10  	LFSR        1, 21
0x05E8	0x0E10      	MOVLW       16
0x05EA	0x6E00      	MOVWF       R0 
0x05EC	0x0E01      	MOVLW       1
0x05EE	0x6E01      	MOVWF       R1 
0x05F0	0x0ED4      	MOVLW       212
0x05F2	0x6EF6      	MOVWF       4086 
0x05F4	0x0E05      	MOVLW       5
0x05F6	0x6EF7      	MOVWF       TBLPTRH 
0x05F8	0x0E00      	MOVLW       0
0x05FA	0x6EF8      	MOVWF       TBLPTRU 
0x05FC	0xF002EC0B  	CALL        1046, 0
0x0600	0x0012      	RETURN      0
;MyProject.c,0 :: ?ICS_target_x
0x05D4	0x0000 ;?ICS_target_x+0
; end of ?ICS_target_x
;MyProject.c,0 :: ?ICS_ox
0x05D6	0x0000 ;?ICS_ox+0
; end of ?ICS_ox
;MyProject.c,0 :: ?ICS_oy
0x05D8	0x0000 ;?ICS_oy+0
; end of ?ICS_oy
;MyProject.c,0 :: ?ICS_target_y
0x05DA	0x0000 ;?ICS_target_y+0
; end of ?ICS_target_y
;MyProject.c,0 :: ?ICS_poss
0x05DC	0x0000 ;?ICS_poss+0
; end of ?ICS_poss
;MyProject.c,0 :: ?ICS_y
0x05DE	0x0000 ;?ICS_y+0
; end of ?ICS_y
;MyProject.c,0 :: ?ICS_mark2
0x05E0	0x0000 ;?ICS_mark2+0
; end of ?ICS_mark2
;MyProject.c,0 :: ?ICS_state
0x05E2	0x0000 ;?ICS_state+0
; end of ?ICS_state
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x001C      [18]    _step_foward
0x002E      [44]    _roboot_left_90
0x005A      [46]    _roboot_left_180
0x0088     [528]    _moving_exactly_on_track
0x0298      [18]    _roboot_off
0x02AA      [44]    _roboot_right_90
0x02D6      [52]    _excute_x
0x030A      [42]    _get_sensor_value
0x0334      [52]    _excute_x_negative
0x0368      [52]    _excute_y
0x039C      [70]    _change_orintation
0x03E2      [52]    _excute_y_negative
0x0416      [16]    ___CC2DW
0x0426     [412]    _moving_robot
0x05C2      [18]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0001       [1]    R1
0x0002       [1]    R2
0x0003       [1]    R3
0x0004       [1]    R4
0x0005       [1]    R5
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0015       [2]    _target_x
0x0017       [2]    _ox
0x0019       [2]    _oy
0x001B       [2]    _target_y
0x001D       [2]    _poss
0x001F       [2]    _y
0x0021       [2]    _mark2
0x0023       [2]    _state
0x0025       [2]    _ex_right
0x0027       [2]    _right
0x0029       [2]    _x
0x002B       [2]    _left
0x002D       [2]    _ex_left
0x002F       [2]    _mark1
0x0031       [2]    _start_flage
0x0033       [2]    _intersection_flage
0x0F82       [1]    PORTC
0x0F83       [1]    PORTD
0x0F94       [1]    TRISC
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x05D4       [2]    ?ICS_target_x
0x05D6       [2]    ?ICS_ox
0x05D8       [2]    ?ICS_oy
0x05DA       [2]    ?ICS_target_y
0x05DC       [2]    ?ICS_poss
0x05DE       [2]    ?ICS_y
0x05E0       [2]    ?ICS_mark2
0x05E2       [2]    ?ICS_state
